import mongoose from 'mongoose';
import { Schema } from "mongoose";

const clientSchema = new Schema({
    clientID: { type : String, required : true, unique: true},
    clientName: { type : String, required : true },
    clientContactPerson: { type : String, },
    clientContact: { type : String, },
    clientEmail: { type : String, },
    clientDesignation: { type : String, },
    landlineNo: { type : String, },
    faxNo: { type : String, },
    companyGst: { type : String, enum: ["36AAVCS6287K1ZA","37AAVCS6287K1Z8"] },
    companyPan: { type : String, enum: ["AAVCS6287K"]},
    clientServiceStartedOn: { type: Date },
    clientServiceEndOn: { type: Date },
    clientServices: { type: Schema.Types.ObjectId, ref: "Department", required: true },
    clientLocation: { type: Schema.Types.ObjectId, ref: "Site", required: true },
    state: { type: String, },
    clientGSTNo: { type: String, validate: { validator: function (v) { return /^\d{2}[A-Z0-9]{13}$/.test(v);  }, message: props => `${props.value} is not a valid GST number!` } },
    clientPANNo: { type: String, },
    clientBillHNo: { type: String, },
    clientBillStreet: { type: String, },
    clientBillVillage: { type: String, },
    clientBillMandal: { type: String, },
    clientBillCity: { type: String, },
    clientBillState: { type: String, },
    clientBillCountry: { type: String, },
    clientBillPincode: { type: String, },
    clientShipHNo: { type: String, },
    clientShipStreet: { type: String, },
    clientShipVillage: { type: String, },
    clientShipMandal: { type: String, },
    clientShipCity: { type: String, },
    clientShipState: { type: String, },
    clientShipCountry: { type: String, },
    clientShipPincode: { type: String, },
    orderNo: { type: String, },
    PTState: { type: String, enum: [ "Andaman and Nicobar Islands", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Ladakh", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Other Territory", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "Foreign Country" ] },
    LWFState: { type: String, enum: [ "Andaman and Nicobar Islands", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Ladakh", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Other Territory", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "Foreign Country" ] },
    PFBranch: { type: String, enum: [ "Andaman and Nicobar Islands", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Ladakh", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Other Territory", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "Foreign Country" ] },
    ESIBranch: { type: String, enum: [ "Andaman and Nicobar Islands", "Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chandigarh", "Chhattisgarh", "Dadra and Nagar Haveli", "Daman and Diu", "Delhi", "Goa", "Gujarat", "Haryana", "Himachal Pradesh", "Jammu and Kashmir", "Jharkhand", "Karnataka", "Kerala", "Ladakh", "Lakshadweep", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya", "Mizoram", "Nagaland", "Odisha", "Other Territory", "Puducherry", "Punjab", "Rajasthan", "Sikkim", "Tamil Nadu", "Telangana", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "Foreign Country" ] },
    clientType: { type: String, enum: [ "One Time Joining", "Annual Maintenance Contract" ] },
    location: { type: String, },
    unit: { type: String, enum: [ "Main Unit", "Sub Unit" ],},
    subUnitName: { type: String, },
    invoice: { type: String, enum: [ "Yes", "No" ] },
    paySheet: { type: String, enum: [ "Yes", "No" ] },
    clientDescription: { type : String },
    clientEmployeeCount: { type: Number },
    createdAt:  { type: Date, default: Date.now },
    updatedAt:  { type: Date, default: Date.now },
})

const Client = mongoose.model("Client", clientSchema);
export default Client;